plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

 // 사용할 스프링 클라우드 버전 정의
ext {
	set('springCloudVersion', "2024.0.0")
}

bootBuildImage {	// 빌드팩을 사용해 OCI 이미지를 빌드하기 위한 스프링 부트 플러그인 작업
	imageName = "${project.name}"	// 빌드할 OCI 이미지의 이름. 이 이름은 그래들의 프로젝트 설정에서 정의한 이름과 같다. 버전 번호를 사용하지 않고 암묵적으로 latest 태그를 사용한다.
	environment = ["BP_JVM_VERSION" : "17.*"]	// 이미지에 설치할 JVM 버전
	
	docker{	//컨테이너 저장소 연결을 설정하기 위한 섹션
		publishRegistry {	// 컨테이너 저장소 인증을 설정하기 위한 섹션. 값은 그래들 속성을 통해 전달된다.
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
			}
		}	
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// 스프링 클라우드 의존성 관리를 위한 BOM
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
